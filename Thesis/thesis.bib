@techreport{efi2018,
author = {Expertenkommission Forschung und Innovation (EFI)},
title = {Gutachten zu Forschung, Innovation und technologischer Leistungsfaehigkeit Deutschlands 2018},
institution = {EFI},
address = {Berlin},
year = {2018}
} 

@article{zimmermann2020adaptive,
  title={An adaptive system for autonomous driving},
  author={Zimmermann, Martin and Wotawa, Franz},
  journal={Software Quality Journal},
  volume={28},
  number={3},
  pages={1189--1212},
  year={2020},
  publisher={Springer}
}

@article{bacha2008odin,
  title={Odin: Team victortango's entry in the darpa urban challenge},
  author={Bacha, Andrew and Bauman, Cheryl and Faruque, Ruel and Fleming, Michael and Terwelp, Chris and Reinholtz, Charles and Hong, Dennis and Wicks, Al and Alberi, Thomas and Anderson, David and others},
  journal={Journal of field Robotics},
  volume={25},
  number={8},
  pages={467--492},
  year={2008},
  publisher={Wiley Online Library}
}


 @manual{J3016_202104,
author={SAEInternational},
title={Taxonomy and Definitions for Terms Related to Driving Automation Systems for On-Road Motor Vehicles},
month={apr},
year={2021},
doi={https://doi.org/10.4271/J3016_202104},
url={https://doi.org/10.4271/J3016_202104},
abstract={This document describes [motor] vehicle driving automation systems that perform part or all of the dynamic driving task (DDT) on a sustained basis. It provides a taxonomy with detailed definitions for six levels of driving automation, ranging from no driving automation (Level 0) to full driving automation (Level 5), in the context of [motor] vehicles (hereafter also referred to as “vehicle” or “vehicles”) and their operation on roadways: Level 0: No Driving Automation Level 1: Driver Assistance Level 2: Partial Driving Automation Level 3: Conditional Driving Automation Level 4: High Driving Automation Level 5: Full Driving Automation These level definitions, along with additional supporting terms and definitions provided herein, can be used to describe the full range of driving automation features equipped on [motor] vehicles in a functionally consistent and coherent manner. “On-road” refers to publicly accessible roadways (including parking areas and private campuses that permit public access) that collectively serve all road users, including cyclists, pedestrians, and users of vehicles with and without driving automation features. The levels apply to the driving automation feature(s) that are engaged in any given instance of on-road operation of an equipped vehicle. As such, although a given vehicle may be equipped with a driving automation system that is capable of delivering multiple driving automation features that perform at different levels, the level of driving automation exhibited in any given instance is determined by the feature(s) that are engaged. This document also refers to three primary actors in driving: the (human) user, the driving automation system, and other vehicle systems and components. These other vehicle systems and components (or the vehicle in general terms) do not include the driving automation system in this model, even though as a practical matter a driving automation system may actually share hardware and software components with other vehicle systems, such as a processing module(s) or operating code. The levels of driving automation are defined by reference to the specific role played by each of the three primary actors in performance of the DDT and/or DDT fallback. “Role” in this context refers to the expected role of a given primary actor, based on the design of the driving automation system in question and not necessarily to the actual performance of a given primary actor. For example, a driver who fails to monitor the roadway during engagement of a Level 1 adaptive cruise control (ACC) system still has the role of driver, even while s/he is neglecting it. Active safety systems, such as electronic stability control (ESC) and automatic emergency braking (AEB), and certain types of driver assistance systems, such as lane keeping assistance (LKA), are excluded from the scope of this driving automation taxonomy because they do not perform part or all of the DDT on a sustained basis, but rather provide momentary intervention during potentially hazardous situations. Due to the momentary nature of the actions of active safety systems, their intervention does not change or eliminate the role of the driver in performing part or all of the DDT, and thus are not considered to be driving automation, even though they perform automated functions. In addition, systems that inform, alert, or warn the driver about hazards in the driving environment are also outside the scope of this driving automation taxonomy, as they neither automate part or all of the DDT, nor change the driver’s role in performance of the DDT (see 8.13). It should be noted, however, that crash avoidance features, including intervention-type active safety systems, may be included in vehicles equipped with driving automation systems at any level. For automated driving system (ADS) features (i.e., Levels 3 to 5) that perform the complete DDT, crash mitigation and avoidance capability is part of ADS functionality (see also 8.13).}
}

@inproceedings{reke2020,
  title={A self-driving car architecture in ROS2},
  author={Reke, Michael and Peter, Daniel and Schulte-Tigges, Joschua and Schiffer, Stefan and Ferrein, Alexander and Walter, Thomas and Matheis, Dominik},
  booktitle={2020 International SAUPEC/RobMech/PRASA Conference},
  pages={1--6},
  year={2020},
  organization={IEEE}
}

@book{murphy2000,
  title={Introduction to AI Robotics},
  author={Murphy, R. and Murphy, R.R. and Arkin, R.C.},
  isbn={9780262133838},
  lccn={00033251},
  series={A Bradford book},
  url={https://books.google.de/books?id=RVlnL\_X6FrwC},
  year={2000},
  publisher={MIT Press}
}

@INPROCEEDINGS{velasco2020,

  author={Velasco-Hernandez, Gustavo and Yeong, De Jong and Barry, John and Walsh, Joseph},

  booktitle={2020 IEEE 16th International Conference on Intelligent Computer Communication and Processing (ICCP)}, 

  title={Autonomous Driving Architectures, Perception and Data Fusion: A Review}, 

  year={2020},

  volume={},

  number={},

  pages={315-321},

  doi={10.1109/ICCP51029.2020.9266268}}

@ARTICLE{brooks1986,

  author={Brooks, R.},

  journal={IEEE Journal on Robotics and Automation}, 

  title={A robust layered control system for a mobile robot}, 

  year={1986},

  volume={2},

  number={1},

  pages={14-23},

  doi={10.1109/JRA.1986.1087032}}
  
@INPROCEEDINGS{desilva2008,

  author={De Silva, L. and Ekanayake, H.},

  booktitle={2008 11th International Conference on Computer and Information Technology}, 

  title={Behavior-based Robotics And The Reactive Paradigm A Survey}, 

  year={2008},

  volume={},

  number={},

  pages={36-43},

  doi={10.1109/ICCITECHN.2008.4803107}}

@book{arkin1998,
  title={Behavior-based Robotics},
  author={Arkin, R.C. and Arkin, R.P.D.M.R.L.R.C. and Arkin, R.C.},
  isbn={9780262011655},
  lccn={97018389},
  series={Bradford book},
  url={https://books.google.de/books?id=mRWT6alZt9oC},
  year={1998},
  publisher={MIT Press}
}

@book{wagner2006,
author = {Wagner, Ferdinand and Schmuki, R. and Wagner, T. and Wolstenholme, P.},
year = {2006},
month = {05},
pages = {1-370},
title = {Modeling Software with Finite State Machines: A Practical Approach},
isbn = {9780429121371},
journal = {Modeling Software with Finite State Machines: A Practical Approach},
doi = {10.1201/9781420013641}
}

@InProceedings{fourakis2014,
author="Foukarakis, Michalis
and Leonidis, Asterios
and Antona, Margherita
and Stephanidis, Constantine",
editor="Stephanidis, Constantine
and Antona, Margherita",
title="Combining Finite State Machine and Decision-Making Tools for Adaptable Robot Behavior",
booktitle="Universal Access in Human-Computer Interaction. Aging and Assistive Environments",
year="2014",
publisher="Springer International Publishing",
address="Cham",
pages="625--635",
abstract="Modeling robot behavior is a common task in robot software development. However, its difficulty grows exponentially along with system complexity. To facilitate the development of a modular, rather than monolithic, behavior system, proper software tools need to be introduced. This paper proposes combination of a well-known finite state machine and a custom decision-making tool for implementing adaptive robot behaviors. The notion of automatic behavior adaptation reflects the capability of the robot to adapt during runtime based on the individual end-user, as well as the particular context of use, therefore delivering the most appropriate interaction experience. While each tool on its own can be used towards that aim, a unified approach that combines them simplifies the task at hand and distinguishes the roles of designers and programmers. To demonstrate the methods' applicability, a concrete example of their combined use is presented.",
isbn="978-3-319-07446-7"
}


@ARTICLE{ziegler2014,
	author={Ziegler, Julius and Bender, Philipp and Schreiber, Markus and Lategahn, Henning and Strauss, Tobias and Stiller, Christoph and Dang, Thao and Franke, Uwe and Appenrodt, Nils and Keller, Christoph G. and Kaus, Eberhard and Herrtwich, Ralf G. and Rabe, Clemens and Pfeiffer, David and Lindner, Frank and Stein, Fridtjof and Erbs, Friedrich and Enzweiler, Markus and Knöppel, Carsten and Hipp, Jochen and Haueis, Martin and Trepte, Maximilian and Brenk, Carsten and Tamke, Andreas and Ghanaat, Mohammad and Braun, Markus and Joos, Armin and Fritz, Hans and Mock, Horst and Hein, Martin and Zeeb, Eberhard},

  journal={IEEE Intelligent Transportation Systems Magazine}, 

  title={Making Bertha Drive—An Autonomous Journey on a Historic Route}, 

  year={2014},

  volume={6},

  number={2},

  pages={8-20},

  doi={10.1109/MITS.2014.2306552}}
  
@INPROCEEDINGS{conner2017,

  author={Conner, David C. and Willis, Justin},

  booktitle={SoutheastCon 2017}, 

  title={Flexible Navigation: Finite state machine-based integrated navigation and control for ROS enabled robots}, 

  year={2017},

  volume={},

  number={},

  pages={1-8},

  doi={10.1109/SECON.2017.7925266}}


@ARTICLE{park2013,

  author={Park, Hae-Won and Ramezani, Alireza and Grizzle, J. W.},

  journal={IEEE Transactions on Robotics}, 

  title={A Finite-State Machine for Accommodating Unexpected Large Ground-Height Variations in Bipedal Robot Walking}, 

  year={2013},

  volume={29},

  number={2},

  pages={331-345},

  doi={10.1109/TRO.2012.2230992}}

@article{iovino2022,
title = {A survey of Behavior Trees in robotics and AI},
journal = {Robotics and Autonomous Systems},
volume = {154},
pages = {104096},
year = {2022},
issn = {0921-8890},
doi = {https://doi.org/10.1016/j.robot.2022.104096},
url = {https://www.sciencedirect.com/science/article/pii/S0921889022000513},
author = {Matteo Iovino and Edvards Scukins and Jonathan Styrud and Petter Ögren and Christian Smith},
keywords = {Behavior Trees, Robotics, Artificial Intelligence, Learning Behavior Trees},
abstract = {Behavior Trees (BTs) were invented as a tool to enable modular AI in computer games, but have received an increasing amount of attention in the robotics community in the last decade. With rising demands on agent AI complexity, game programmers found that the Finite State Machines (FSM) that they used scaled poorly and were difficult to extend, adapt and reuse. In BTs, the state transition logic is not dispersed across the individual states, but organized in a hierarchical tree structure, with the states as leaves. This has a significant effect on modularity, which in turn simplifies both synthesis and analysis by humans and algorithms alike. These advantages are needed not only in game AI design, but also in robotics, as is evident from the research being done. In this paper we present a comprehensive survey of the topic of BTs in Artificial Intelligence and Robotic applications. The existing literature is described and categorized based on methods, application areas and contributions, and the paper is concluded with a list of open research challenges.}
}

@ARTICLE{florez2009,

  author={Florez-Puga, Gonzalo and Gomez-Martin, Marco Antonio and Gomez-Martin, Pedro Pablo and Diaz-Agudo, BelÉn and Gonzalez-Calero, Pedro Antonio},

  journal={IEEE Transactions on Computational Intelligence and AI in Games}, 

  title={Query-Enabled Behavior Trees}, 

  year={2009},

  volume={1},

  number={4},

  pages={298-308},

  doi={10.1109/TCIAIG.2009.2036369}
  }
  
@book{krishnamurthy2016partially,
  title={Partially Observed Markov Decision Processes},
  author={Krishnamurthy, Vikram},
  year={2016},
  publisher={Cambridge university press}
}

@inproceedings{feyzabadi2014riskaware,
author = {Feyzabadi, Shams and Carpin, Stefano},
year = {2014},
month = {08},
pages = {},
title = {Risk-aware Path Planning Using Hierarchical Constrained Markov Decision Processes},
volume = {2014},
journal = {IEEE International Conference on Automation Science and Engineering},
doi = {10.1109/CoASE.2014.6899341}
}

@online{tanwar2019markov,
  author = {Tanwar, Sanchit},
  title = {Markov chains and Markov Decision process},
  year = 2019,
  url = {https://sanchittanwar75.medium.com/markov-chains-and-markov-decision-process-e91cda7fa8f2},
  urldate = {2022-09-05}
}

@online{banerjee2021real,
	author = {Banerjee, Somnath},
	title = {Real World Applications of Markov Decision Process},
	year = {2021},
	url = {https://towardsdatascience.com/real-world-applications-of-markov-decision-process-mdp-a39685546026},
	urldate = {2022-09-05}
}

@article{andrew1999reinforcement,
  title={REINFORCEMENT LEARNING: AN INTRODUCTION by Richard S. Sutton and Andrew G. Barto, Adaptive Computation and Machine Learning series, MIT Press (Bradford Book), Cambridge, Mass., 1998, xviii+ 322 pp, ISBN 0-262-19398-1,(hardback,{\pounds} 31.95).},
  author={Andrew, Alex M},
  journal={Robotica},
  volume={17},
  number={2},
  pages={229--235},
  year={1999},
  publisher={Cambridge University Press}
}

@InProceedings{macenski2020,
author = {Macenski, Steven and Martin, Francisco and White, Ruffin and Ginés Clavero, Jonatan},
title = {The Marathon 2: A Navigation System},
booktitle = {2020 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS)},
year = {2020}
}

@article{ros2022,  
    author = {Steven Macenski  and Tully Foote  and Brian Gerkey  and Chris Lalancette  and William Woodall },
    title = {Robot Operating System 2: Design, architecture, and uses in the wild},
    journal = {Science Robotics},
    volume = {7},
    number = {66},
    pages = {eabm6074},
    year = {2022},
    doi = {10.1126/scirobotics.abm6074},
    URL = {https://www.science.org/doi/abs/10.1126/scirobotics.abm6074},
    doi={10.1126/scirobotics.abm6074}
}

@inproceedings{quigley2009,
  title={ROS: an open-source Robot Operating System},
  author={Quigley, Morgan and Conley, Ken and Gerkey, Brian and Faust, Josh and Foote, Tully and Leibs, Jeremy and Wheeler, Rob and Ng, Andrew Y and others},
  booktitle={ICRA workshop on open source software},
  volume={3},
  number={3.2},
  pages={5},
  year={2009},
  organization={Kobe, Japan}
}

@book{konrad2003defining,
  title={Defining and using requirements patterns for embedded systems},
  author={Konrad, Sascha J},
  year={2003},
  publisher={Michigan State University}
}
